on: [push]
name: push
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1.2.0
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install Requirements
        run: |
          pip install wheel==0.36.2
      - name: Build Wheel
        run: |
          python setup.py bdist_wheel
      - name: Upload Wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheel
          path: dist
  test:
    strategy:
      matrix:
        python: [3.9, 3.8, 3.7]
        os: [ubuntu-20.04, macos-10.15, windows-2019]
    runs-on: ${{matrix.os}}
    needs: [build]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1.2.0
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python}}
      - name: Download Wheel
        uses: actions/download-artifact@v2
        with:
          name: wheel
          path: dist
      - name: Install Requirements
        run: |
          pip install -r dev-requirements.txt
      - name: Install Scriptenv
        run: |
          pip install -e .
      - name: Run Unit Tests
        run: |
          pytest
      - name: Run Integration Tests
        run: |
          python -c "import scriptenv; scriptenv.requires('requests==2.25.1'); import requests; assert requests.__version__ == '2.25.1'"
  release:
    runs-on: ubuntu-20.04
    needs: [test]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1.2.0
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Download Wheel
        uses: actions/download-artifact@v2
        with:
          name: wheel
          path: dist
      - name: Delete Previous Latest Github Release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          tag_name: latest
          delete_release: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Latest Github Release
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          gh release create latest ./dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
